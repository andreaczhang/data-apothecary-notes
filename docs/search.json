[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Apothecary’s Notes",
    "section": "",
    "text": "Github\n  \n\n  \n  \nHello, welcome!\nThis is the note repository for modern data science skills with a focus on drug development and clinical trials. Content will be gradually added while I learn the topics. Therefore, it is by no means a complete guide by the time you read it!\nI try to organize the content in a modular way. I think these should cover the important aspects in which a data scientist / modern statistician should know.\n\nstudy design\ninference\nmodels\nreporting\nprogramming\n\nAny feedback / mistake corrections are welcome, you can find me here. Thank you!"
  },
  {
    "objectID": "documentation/understand_data.html",
    "href": "documentation/understand_data.html",
    "title": "Part 1: Understand the current diet",
    "section": "",
    "text": "Load the aggregated food groups and their attributes. We have 28 food groups.\n\nfoods <- read.csv('data/foods.csv', sep = ',')\ndata.table::setDT(foods) # use data.table format\nfoods[1:10,] # show the first 10\n\n                   food intake energy protein   fat carbs sugar alcohol  ghge\n 1:               Bread  175.4 10.696   0.091 0.030 0.441 0.002       0 0.001\n 2:        Other grains   45.0 14.022   0.100 0.042 0.607 0.011       0 0.002\n 3:               Cakes   35.6 14.185   0.067 0.152 0.424 0.185       0 0.002\n 4:            Potatoes   67.8  3.791   0.021 0.007 0.178 0.000       0 0.000\n 5:          Vegetables  154.6  1.565   0.015 0.008 0.050 0.005       0 0.001\n 6:             Legumes    3.5  8.571   0.143 0.029 0.286 0.000       0 0.001\n 7:      Fruit, berries  171.5  2.729   0.008 0.004 0.134 0.029       0 0.001\n 8:               Juice  111.0  1.928   0.005 0.002 0.103 0.000       0 0.001\n 9:                Nuts    4.3 25.581   0.209 0.535 0.116 0.000       0 0.005\n10: Vegetarian products    0.7  4.286   0.143 0.000 0.000 0.000       0 0.003\n\n\nDefine the constraints on\n\nenergy\nprotein, fat, carbs, sugar, alcohol\nGHGE (greenhouse gas equivalent)\n\n\nconstraints <- data.frame(\n  constraint = c('lower', 'upper'), \n  energy = c(9000, 10000), \n  protein = c(55, 111.5), \n  fat = c(61.8, 98.8), \n  carbs = c(250, 334.6), \n  sugar = c(0, 54.8), \n  alcohol = c(0, 10),\n  ghge = c(0, 4.7)\n)\nconstraints\n\n  constraint energy protein  fat carbs sugar alcohol ghge\n1      lower   9000    55.0 61.8 250.0   0.0       0  0.0\n2      upper  10000   111.5 98.8 334.6  54.8      10  4.7"
  },
  {
    "objectID": "documentation/index.html",
    "href": "documentation/index.html",
    "title": "Documentation",
    "section": "",
    "text": "It is important to document while you go.\n\n\n\n\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nPart 1: Understand the current diet\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "What is Data Apothecary’s Notes?",
    "section": "",
    "text": "Hello, welcome!\nThis is the note repository for some documentation and demonstration on modern data science skills related to drug development.\nI created this repo so that I can find notes with code and rendered results easily. Therefore, the target audience is the future-me; if it helps you in some way as well, I’d be more than happy!\nIf you see some errors or have any suggestions, please feel free to reach out.\nFind out who I am here!"
  },
  {
    "objectID": "reporting/index.html",
    "href": "reporting/index.html",
    "title": "Reporting",
    "section": "",
    "text": "It is important to document while you go.\n\n\n\n\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nClinical trial: reporting results\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "reporting/understand_data.html",
    "href": "reporting/understand_data.html",
    "title": "Part 1: Understand the current diet",
    "section": "",
    "text": "Load the aggregated food groups and their attributes. We have 28 food groups.\n\nfoods <- read.csv('data/foods.csv', sep = ',')\ndata.table::setDT(foods) # use data.table format\nfoods[1:10,] # show the first 10\n\n                   food intake energy protein   fat carbs sugar alcohol  ghge\n 1:               Bread  175.4 10.696   0.091 0.030 0.441 0.002       0 0.001\n 2:        Other grains   45.0 14.022   0.100 0.042 0.607 0.011       0 0.002\n 3:               Cakes   35.6 14.185   0.067 0.152 0.424 0.185       0 0.002\n 4:            Potatoes   67.8  3.791   0.021 0.007 0.178 0.000       0 0.000\n 5:          Vegetables  154.6  1.565   0.015 0.008 0.050 0.005       0 0.001\n 6:             Legumes    3.5  8.571   0.143 0.029 0.286 0.000       0 0.001\n 7:      Fruit, berries  171.5  2.729   0.008 0.004 0.134 0.029       0 0.001\n 8:               Juice  111.0  1.928   0.005 0.002 0.103 0.000       0 0.001\n 9:                Nuts    4.3 25.581   0.209 0.535 0.116 0.000       0 0.005\n10: Vegetarian products    0.7  4.286   0.143 0.000 0.000 0.000       0 0.003\n\n\nDefine the constraints on\n\nenergy\nprotein, fat, carbs, sugar, alcohol\nGHGE (greenhouse gas equivalent)\n\n\nconstraints <- data.frame(\n  constraint = c('lower', 'upper'), \n  energy = c(9000, 10000), \n  protein = c(55, 111.5), \n  fat = c(61.8, 98.8), \n  carbs = c(250, 334.6), \n  sugar = c(0, 54.8), \n  alcohol = c(0, 10),\n  ghge = c(0, 4.7)\n)\nconstraints\n\n  constraint energy protein  fat carbs sugar alcohol ghge\n1      lower   9000    55.0 61.8 250.0   0.0       0  0.0\n2      upper  10000   111.5 98.8 334.6  54.8      10  4.7"
  },
  {
    "objectID": "models/index.html",
    "href": "models/index.html",
    "title": "Models",
    "section": "",
    "text": "Models for repeated measurement, longitudinal data and related matters.\nOr more precisely: different endpoints\n\n\n\n\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nMixed models\n\n\n\n\nSurvival\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "models/understand_data.html",
    "href": "models/understand_data.html",
    "title": "Mixed models",
    "section": "",
    "text": "Yet to be filled in"
  },
  {
    "objectID": "study_design/index.html",
    "href": "study_design/index.html",
    "title": "Study design",
    "section": "",
    "text": "Topics (ongoing)\n\nClinical trial design\n\nPhase I, II, III\nadaptive design\n\nSample size calculation\n\ncomparing a few groups (visualization TBD)\nregression (LR, GLM)\nmore advanced model (e.g. GLMM)\n\n\n\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\nAdaptive design: overview\n\n\nIntro to adaptive design\n\n\n\n\nSample size (part I)\n\n\nOverview, mean and proportion comparison\n\n\n\n\nSample size (part II)\n\n\nRegression\n\n\n\n\nClinical trial design: overview\n\n\nNotes related to clinical trial design.\n\n\n\n\n\n\nNo matching items\n\n\n\nCHECK\nhttps://stats.stackexchange.com/questions/48374/sample-size-calculation-for-mixed-models\nICH Guidelines (EMA)\nhttps://www.ema.europa.eu/en/ich-e10-choice-control-group-clinical-trials-scientific-guideline#current-effective-version-section\nhttps://www.ema.europa.eu/en/documents/scientific-guideline/ich-e-10-choice-control-group-clinical-trials-step-5_en.pdf\nhttps://clinicaltrials.gov"
  },
  {
    "objectID": "study_design/understand_data.html",
    "href": "study_design/understand_data.html",
    "title": "Part 1: Understand the current diet",
    "section": "",
    "text": "Load the aggregated food groups and their attributes. We have 28 food groups.\n\nfoods <- read.csv('data/foods.csv', sep = ',')\ndata.table::setDT(foods) # use data.table format\nfoods[1:10,] # show the first 10\n\n                   food intake energy protein   fat carbs sugar alcohol  ghge\n 1:               Bread  175.4 10.696   0.091 0.030 0.441 0.002       0 0.001\n 2:        Other grains   45.0 14.022   0.100 0.042 0.607 0.011       0 0.002\n 3:               Cakes   35.6 14.185   0.067 0.152 0.424 0.185       0 0.002\n 4:            Potatoes   67.8  3.791   0.021 0.007 0.178 0.000       0 0.000\n 5:          Vegetables  154.6  1.565   0.015 0.008 0.050 0.005       0 0.001\n 6:             Legumes    3.5  8.571   0.143 0.029 0.286 0.000       0 0.001\n 7:      Fruit, berries  171.5  2.729   0.008 0.004 0.134 0.029       0 0.001\n 8:               Juice  111.0  1.928   0.005 0.002 0.103 0.000       0 0.001\n 9:                Nuts    4.3 25.581   0.209 0.535 0.116 0.000       0 0.005\n10: Vegetarian products    0.7  4.286   0.143 0.000 0.000 0.000       0 0.003\n\n\nDefine the constraints on\n\nenergy\nprotein, fat, carbs, sugar, alcohol\nGHGE (greenhouse gas equivalent)\n\n\nconstraints <- data.frame(\n  constraint = c('lower', 'upper'), \n  energy = c(9000, 10000), \n  protein = c(55, 111.5), \n  fat = c(61.8, 98.8), \n  carbs = c(250, 334.6), \n  sugar = c(0, 54.8), \n  alcohol = c(0, 10),\n  ghge = c(0, 4.7)\n)\nconstraints\n\n  constraint energy protein  fat carbs sugar alcohol ghge\n1      lower   9000    55.0 61.8 250.0   0.0       0  0.0\n2      upper  10000   111.5 98.8 334.6  54.8      10  4.7"
  },
  {
    "objectID": "programming/index.html",
    "href": "programming/index.html",
    "title": "Programming",
    "section": "",
    "text": "This page hosts study notes on programming, with a strong flavour of R.\n\nR programming\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nError handling in R\n\n\n\n\nOOP in R: S3\n\n\n\n\n\n\nNo matching items\n\n\n\n\nR package\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nR package Engineering Workflow\n\n\n\n\nR package: tests\n\n\n\n\n\n\nNo matching items\n\n\n\n\nWeb and quarto\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nMake slides with reveal.js\n\n\n\n\nWeb basics\n\n\n\n\nWebR: Use with an existing quarto website\n\n\n\n\n\n\nNo matching items\n\n\n\n\nOther topics\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nTopic coverage: R developer\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "programming/understand_data.html",
    "href": "programming/understand_data.html",
    "title": "Part 1: Understand the current diet",
    "section": "",
    "text": "Load the aggregated food groups and their attributes. We have 28 food groups.\n\nfoods <- read.csv('data/foods.csv', sep = ',')\ndata.table::setDT(foods) # use data.table format\nfoods[1:10,] # show the first 10\n\n                   food intake energy protein   fat carbs sugar alcohol  ghge\n 1:               Bread  175.4 10.696   0.091 0.030 0.441 0.002       0 0.001\n 2:        Other grains   45.0 14.022   0.100 0.042 0.607 0.011       0 0.002\n 3:               Cakes   35.6 14.185   0.067 0.152 0.424 0.185       0 0.002\n 4:            Potatoes   67.8  3.791   0.021 0.007 0.178 0.000       0 0.000\n 5:          Vegetables  154.6  1.565   0.015 0.008 0.050 0.005       0 0.001\n 6:             Legumes    3.5  8.571   0.143 0.029 0.286 0.000       0 0.001\n 7:      Fruit, berries  171.5  2.729   0.008 0.004 0.134 0.029       0 0.001\n 8:               Juice  111.0  1.928   0.005 0.002 0.103 0.000       0 0.001\n 9:                Nuts    4.3 25.581   0.209 0.535 0.116 0.000       0 0.005\n10: Vegetarian products    0.7  4.286   0.143 0.000 0.000 0.000       0 0.003\n\n\nDefine the constraints on\n\nenergy\nprotein, fat, carbs, sugar, alcohol\nGHGE (greenhouse gas equivalent)\n\n\nconstraints <- data.frame(\n  constraint = c('lower', 'upper'), \n  energy = c(9000, 10000), \n  protein = c(55, 111.5), \n  fat = c(61.8, 98.8), \n  carbs = c(250, 334.6), \n  sugar = c(0, 54.8), \n  alcohol = c(0, 10),\n  ghge = c(0, 4.7)\n)\nconstraints\n\n  constraint energy protein  fat carbs sugar alcohol ghge\n1      lower   9000    55.0 61.8 250.0   0.0       0  0.0\n2      upper  10000   111.5 98.8 334.6  54.8      10  4.7"
  },
  {
    "objectID": "inference/index.html",
    "href": "inference/index.html",
    "title": "Inference from RCT and RWD",
    "section": "",
    "text": "Notes on causal inference and other related topics.\n\n\n\n\n\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\nOverview: causal inference\n\n\n\n\n\n\n\nEstimation\n\n\ng-formula, inverse probability weighting\n\n\n\n\nReal-world Data, Real-world Evidence\n\n\nRWD, RWE\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "inference/understand_data.html",
    "href": "inference/understand_data.html",
    "title": "(Placeholder)",
    "section": "",
    "text": "Define the constraints on\n\nenergy\nprotein, fat, carbs, sugar, alcohol\nGHGE (greenhouse gas equivalent)\n\n\nconstraints <- data.frame(\n  constraint = c('lower', 'upper'), \n  energy = c(9000, 10000), \n  protein = c(55, 111.5), \n  fat = c(61.8, 98.8), \n  carbs = c(250, 334.6), \n  sugar = c(0, 54.8), \n  alcohol = c(0, 10),\n  ghge = c(0, 4.7)\n)\nconstraints\n\n  constraint energy protein  fat carbs sugar alcohol ghge\n1      lower   9000    55.0 61.8 250.0   0.0       0  0.0\n2      upper  10000   111.5 98.8 334.6  54.8      10  4.7"
  },
  {
    "objectID": "study_design/methodnotes_20230601_trialdesign/index.html",
    "href": "study_design/methodnotes_20230601_trialdesign/index.html",
    "title": "Clinical trial design",
    "section": "",
    "text": "Coursera course Design and interpretation of clinical trials by Johns Hopkins University"
  },
  {
    "objectID": "study_design/methodnotes_20230601_trialdesign/index.html#types-of-trials-designs",
    "href": "study_design/methodnotes_20230601_trialdesign/index.html#types-of-trials-designs",
    "title": "Clinical trial design",
    "section": "Types of trials designs",
    "text": "Types of trials designs\nPhase 1: 10-30, identify tolerable dose, information on drug metabolism, extretion and toxicity. Often not controlled\nPhase 2: 30-100, efficacy, safety and side effects,\nPhase 3: 100+, often randomized\nPhase 4: demonstration\n\nTypes of design\nPopulation have the disease outcome of interest; not healthy voluteers vs diseased.\nRandomisation unit: persons, two eyes of a person, or groups of persons\nComparison structure: parallel, crossover, group allocation\n\nParallel: simultaneous treatment and control groups, subjects randomly assigned to one group.\nCrossover: randomize of order in which treatments are received; TC or CT. Each patient is his/her own control. Washout period: time between two treatments.\n\nVariability reduced because less variability within patient than between patients. Fewer patients needed.\nDisadvantages: only certain treatments can use crossover design, treatment can’t have permanent effects. Carry-over effects from first period; washout needs to be long enough. Dropouts more significant, analysis may be more difficult: correlated outcomes.\nConstant intensity of underlying disease: chronic diseases (e.g. asthma, hypertension, arthritis) + short-term treatment effects (relief of signs or symptoms)\ne.g. morning dose vs evening dose\n\nGroup allocation: a group of subjects (community, school, clinic).\n\nExtensions of the parallel design: factorial, large simple\n\nFactorial: two interventions tested simultaneously. Can be presented in a 2 by 2 table (treatment A +-, treatment B +-); or 3 by 2 etc.\n\nInterested in main effect (if no interaction expected). A vs no A; B vs no B. The other treatment doesn’t matter.\n\nLarge simple: large number of patients, possibly from many study sites.\n\n\nTests other than superiority\n\nEquivalency: intervention response is close to control group response\nNon-inferiority: Treatment A (new) is at least as good as B (established). One-sided test, if A is worse than B, one can be rejected. Does not require as big sample size.\n\n\n\nAdaptive design\nPossible adaptations\n\nrandomization probabilities\nsample size (e.g. group sequential methods)\nvisit schedule: shorten/lengthen follow-up time, change number of timing of visits, treatments (dose/duration, concomitant meds)\nhypothesis tested"
  },
  {
    "objectID": "study_design/methodnotes_20230601_trialdesign/index.html#randomisation-and-masking",
    "href": "study_design/methodnotes_20230601_trialdesign/index.html#randomisation-and-masking",
    "title": "Clinical trial design",
    "section": "Randomisation and masking",
    "text": "Randomisation and masking\nRationale:\n\navoid selection bias: prognostic factors related to treatment assignment\ntends to produce comparable treatment groups\n\n\nSchemes\nSimple randomization, restricted randomization, adaptive randomization\n\nSimple rz\nEach assignment is unpredictable, number of patients in each group should be equal in the long run.\nRisks: imbalances in number assigned to treatment groups, or confounding factors (gender, disease severity) -> reduced power\n\n\nRestricted rz\nSchemes with constraints to produce expected assignment ratio\n\nblocking\nstratification\n\nBlocking. Block of size 2 with treatment allocation ratio 1:1: A,B. Size 4: 2As, 2Bs. Need to be permuted: AABB, ABAB, … in total 6 combinations. Then choose one of the permutations.\nStratification. Ensure balance in treatment assignments with subgroups defined before rz. Limit to a few variables (highly related to outcome and/or logistical): e.g. clinic in a multicenter trial, surgeon (skills, procedures), stage of disease, demographic such as gender and age.\nUse these two together.\n\n\nAdaptive rz\nProbability of assignment does not remain constant, but determined by the current balance and composition of the groups.\n\nminimization: choose the design that gives the smallest imbalance.\nplay the winner: change allocation ratio or favor the better treatment based on the primary outcome. Need to evaluate outcomes relatively quickly.\n\n\n\n\nMasking (blinding)\nTreatment assignment is not known after rz.\n\npatient, clinical personnel, evaluators, data processors, …\nsingle (only participant), double (+ investigator), triple (+ data processors, …), quadruple …\n\nPurpose: remove bias related to treatment effects.\nDifferent levels of masking protects to different extent against bias in different aspects\n\ndata reporting\ndata collection / follow-up\ntesting, behaviors\noutcome assessment\n\nDecision to mask treatments\n\nethical?\npossible? can you make the treatment seem identical so the participants do not know?\ntrial design features: more important to mask subjective ones (e.g. alive or dead is the least subjective, hence wouldn’t benefit much; however if participants need to report effects that are not objectively measureable, they might report that treatment is better in contrast to placebo group)\nfeasible? cost-benefit, practicality (adherence)\n\nSometimes investigators in a double blind study might know which treatment is being assigned to participants, if the effect of drug is very obvious (both good or bad).\nUnmasking\n\nPlanned: inform participants once the trial finished\nUnplanned (discouraged): in the event of adverse event"
  },
  {
    "objectID": "study_design/methodnotes_20230601_trialdesign/index.html#outcomes-and-analysis",
    "href": "study_design/methodnotes_20230601_trialdesign/index.html#outcomes-and-analysis",
    "title": "Clinical trial design",
    "section": "Outcomes and analysis",
    "text": "Outcomes and analysis\nOutcome: endpoint. It is a quantitaive measure.\nObjectives of the trial\n\nefficacy / effectiveness\nsafety\nprocess\ncosts\n\nExample: evaluate treatment for asthma\nOutcomes: exhaled nitrous oxide, lung function (spirometry measures), asthma symptoms (wheezing, night awakenings), …\nExample: evaluate a procedure to reduce perioperative morbidity\nOutcome considerations: time window (what is postoperative), specific events to be considered an outcome, procedures to establish outcomes, …\n\nMetrics for events as outcomes\n\ndichotomous: 1/0 for presence absense, normal abnormal; clinical state or cut-off value\ntime-to-event: in addition to dichotomous, add time dimension; allow for censoring. More powerful than dichotomous.\nrates: 1/0 but allow for repeats, analyze count or rate. Events within a person are usually not independent, need to account for it.\ncontinuous variables: value or change from baseline; standard units (lab values, scores). Need to define an important difference. Distributional assumptions more important.\nordinal scale: ranked categories (e.g. adverse event grading, 1-5). Difference between categories is usually qualitative.\n\nPatients opinions are subjective\n\nhealth status / change in status, e.g. pain relief, quality of life\nmasking is more important\nhawthorne / placebo effect: effect of being studies, usually positive\nquantify with standardized scales\n\n\n\nInfluence of outcomes on design\nEfficacy vs effectiveness:\nIn a vaccine trial, efficacy is the clinical case with lab confirmation; effectivenenss is the clinical case of influenza in a larger population, may or may not be confirmed.\nIn asthma, efficacy is FEV1, effectiveness is the decrease of the hospitalizations/steroid courses.\nConsiderations (3Bs)\n\nbiology: does outcome reflect a clinically relevant fact/change\nbiostatistics: detectable difference between groups is plausible and practical\nbudget: afford total N and can measure it reliably in every participant\n\nExample: HIV trial outcomes\n\nsurvival (deaths; AIDS status)\nimmunologic response\nvirologic response\nchange in patient status (e.g QoL)\nspecified toxicity\nother side effects\n\nChoice of primary outcome depends on the objectives or stage of research\n\nphase 1, emphasis on safety\nphase 2, short-term efficacy\nphase 3, long-term efficacy\nphase 4, long-term effectiveness\n\n\n\nIntention to treat ITT\nCross-overs after rz: some patients might have a treatment (yes or no) beyond what they were assigned to, e.g. refuse surgery or medical treatment\nNon-adherence during followup: some in treatment group refuse of can not tolerate certain treatment; while some in placebo group require medication or take on their own\n\n\nSubgroup analysis\nStratified analysis: estimate treatment effect separately in subgroups. Does not tell difference across different subgroups\nTest for interaction: use of main effect and interaction.\nIssue of multiple testing when doing a series of analyses\n\ninflate sample size to plan for subgroup analysis\nreport number of subgroup analyses performed\npossibly adjust for multiple comparisons\nreport CI instead of just p-values"
  },
  {
    "objectID": "study_design/methodnotes_20230601_trialdesign/index.html#reporting-results",
    "href": "study_design/methodnotes_20230601_trialdesign/index.html#reporting-results",
    "title": "Clinical trial design",
    "section": "Reporting results",
    "text": "Reporting results\n\nCONSORT\nConsolidated Standards of Reporting Trials\n25 item checklist. Not a guideline of how to do the trial; but a guideline for writers on how to report clearly.\nTitle\n\nkey design items\ntreatment(s) evaluated\ndisease or population studied\n\nAbstract\n\ndesign, method, results, conclusions\n\nIntroduction\n\nbackgrounds, rationale, establish equipoise (balance), systematic review, objectives / hypothesis\n\nMethod\n\nIRB review and approvals\ntrial design, allocation ratio\neligibility criteria\nsetting and location of the trial\nintervention - detailed enough to allow replication\noutcomes - primary, secondary, how assessed and defined\nsample size - how determined, interim analyses\nimportant changes during trial\nrandomization, allocation concealment, implementation\nmasking - who, how\nstatistical methods - primary and secondary; subgroup analyses\n\nConvenient to use a flow-chart\nBaseline characteristics by treatment group\np-values (common to not report in rct?)\n\n\nEvaluate literature\n\nLegitimacy, is it a fair comparison\nTrustworthy investigators? conflict of interest\nAdequate protections against bias\n\nrandomization\nmasking\nfollow-up design and execution\n\nITT analysis\n\nhave all events (outcomes) observed been counted in the treatment group assigned?\nvariations in denominators explained and consistent with good practice?\n\nappropriate subgroup analysis interpretation\n\nad hoc or post hoc status"
  },
  {
    "objectID": "programming/r_roop.html",
    "href": "programming/r_roop.html",
    "title": "OOP in R: S3",
    "section": "",
    "text": "Useful references:"
  },
  {
    "objectID": "programming/r_roop.html#terminology",
    "href": "programming/r_roop.html#terminology",
    "title": "OOP in R: S3",
    "section": "Terminology",
    "text": "Terminology\n\nObject: individual instances of a class\nClass: type of an object, i.e. what an object is\nMethod: a function associated with a particular class, i.e. what the object can do\n\ngeneric method: mean() of a vector of numbers is a number, mean() of a vector of dates is a date\nInherit: a sub-class inherits all the attributes and methods from the super-class. E.g. generalized linear model inherits from a linear model.\nmethod dispatch: the process of finding the correct method given a class\n\n\nEncapsulated OOP:\n\nmethods belong to object or classes\nobject.method(arg1, arg2)\ncommon in most languages\nR6, RC (reference class) are examples of this type\n\nFunctional OOP:\n\nmethods belong to generic functions\ngeneric(object, arg2, arg3)\nS3 is an informal implementation of this type"
  },
  {
    "objectID": "programming/r_roop.html#base-types",
    "href": "programming/r_roop.html#base-types",
    "title": "OOP in R: S3",
    "section": "Base types",
    "text": "Base types\nCheck whether an object is object-oriented, or base object:\n\nis.object()\nsloop::otype(): returns base or S3/S4\nattr(obj_name, 'class'): OO objects has a class attribute, BO does not.\n\n\nx <- 1:10 # a numeric vector\ny <- factor(c('a', 'b'))  # a factor\n\nc(is.object(x), is.object(y))\n\n[1] FALSE  TRUE\n\nc(sloop::otype(x), sloop::otype(y))\n\n[1] \"base\" \"S3\"  \n\nattr(x, 'class') \n\nNULL\n\nattr(y, 'class')\n\n[1] \"factor\"\n\n\nAll objects have a base type; not all are OO objects.\n\ntypeof(1:10) returns ‘integer’\n25 base types in total\n\nvectors: e.g. NULL, logical, integer, double, complex, character, list, raw\nfunctions: e.g. closure, special, builtin\nenvironments: environment\nS4: S4\nlanguage components, symbol, language, pairlist the rest are less common."
  },
  {
    "objectID": "programming/r_roop.html#generic-or-method",
    "href": "programming/r_roop.html#generic-or-method",
    "title": "OOP in R: S3",
    "section": "Generic or method?",
    "text": "Generic or method?\n\ngeneric.class(), for example: print.factor()\ndo not call the method directly; use the generic (dispatch) to find it.\ngenerally has the . in the name; however it is not guaranteed * t.test() is a generic like print(), as t.test() can be used on multiple types of inputs\n\nas.factor() is not an OO object, hence not S3\n\n\n\nCheck function type with sloop::ftype()\n\nsloop::ftype(predict) # predict is a generic\n\n[1] \"S3\"      \"generic\"\n\nsloop::ftype(predict.glm)  # glm (class) method for predict() generic\n\n[1] \"S3\"     \"method\"\n\n\n\n\nCheck methods with methods()\nmethods() checks all the methods that either:\n\nbelongs to a generic (the function), such as plot, predict, t.test\nbelongs to a class (the type of input), such as lm, ar\n\n\nmethods('predict')  \n\n [1] predict.ar*                predict.Arima*            \n [3] predict.arima0*            predict.glm               \n [5] predict.HoltWinters*       predict.lm                \n [7] predict.loess*             predict.mlm*              \n [9] predict.nls*               predict.poly*             \n[11] predict.ppr*               predict.prcomp*           \n[13] predict.princomp*          predict.smooth.spline*    \n[15] predict.smooth.spline.fit* predict.StructTS*         \nsee '?methods' for accessing help and source code\n\nmethods(class = 'lm')\n\n [1] add1           alias          anova          case.names     coerce        \n [6] confint        cooks.distance deviance       dfbeta         dfbetas       \n[11] drop1          dummy.coef     effects        extractAIC     family        \n[16] formula        hatvalues      influence      initialize     kappa         \n[21] labels         logLik         model.frame    model.matrix   nobs          \n[26] plot           predict        print          proj           qr            \n[31] residuals      rstandard      rstudent       show           simulate      \n[36] slotsFromS3    summary        variable.names vcov          \nsee '?methods' for accessing help and source code\n\n\nEquivalently, use sloop::s3_methods_*(), as it gives more information in the output.\n\nsloop::s3_methods_generic('predict') \n\n# A tibble: 16 × 4\n   generic class             visible source             \n   <chr>   <chr>             <lgl>   <chr>              \n 1 predict ar                FALSE   registered S3method\n 2 predict Arima             FALSE   registered S3method\n 3 predict arima0            FALSE   registered S3method\n 4 predict glm               TRUE    stats              \n 5 predict HoltWinters       FALSE   registered S3method\n 6 predict lm                TRUE    stats              \n 7 predict loess             FALSE   registered S3method\n 8 predict mlm               FALSE   registered S3method\n 9 predict nls               FALSE   registered S3method\n10 predict poly              FALSE   registered S3method\n11 predict ppr               FALSE   registered S3method\n12 predict prcomp            FALSE   registered S3method\n13 predict princomp          FALSE   registered S3method\n14 predict smooth.spline     FALSE   registered S3method\n15 predict smooth.spline.fit FALSE   registered S3method\n16 predict StructTS          FALSE   registered S3method\n\nsloop::s3_methods_class('lm')\n\n# A tibble: 35 × 4\n   generic        class visible source             \n   <chr>          <chr> <lgl>   <chr>              \n 1 add1           lm    FALSE   registered S3method\n 2 alias          lm    FALSE   registered S3method\n 3 anova          lm    FALSE   registered S3method\n 4 case.names     lm    FALSE   registered S3method\n 5 confint        lm    TRUE    stats              \n 6 cooks.distance lm    FALSE   registered S3method\n 7 deviance       lm    FALSE   registered S3method\n 8 dfbeta         lm    FALSE   registered S3method\n 9 dfbetas        lm    FALSE   registered S3method\n10 drop1          lm    FALSE   registered S3method\n# ℹ 25 more rows"
  },
  {
    "objectID": "programming/r_roop.html#class-assignment",
    "href": "programming/r_roop.html#class-assignment",
    "title": "OOP in R: S3",
    "section": "Class assignment",
    "text": "Class assignment\nTwo options: structure(), or class(existing_obj)\n\nsimple_number <- structure(1, class = 'simple')\nclass(simple_number)\n\n[1] \"simple\"\n\n\nOr, you can do it for an existing object by giving it a class\n\nsimple_char <- 'your_name'\nclass(simple_char) <- 'simple'\nclass(simple_char)\n\n[1] \"simple\""
  },
  {
    "objectID": "programming/r_roop.html#constructor",
    "href": "programming/r_roop.html#constructor",
    "title": "OOP in R: S3",
    "section": "Constructor",
    "text": "Constructor\n\nfruit <- function(x){\n  stopifnot(is.character(x))\n  # checks if x is char\n  # better use a named list, easier to call\n  structure(list(fruit_name = x), class = 'fruit') \n}\n\nfruit1 <- fruit('pineapple')\nfruit2 <- fruit('apple')\n\nExamine what comes out\n\nfruit1\n\n$fruit_name\n[1] \"pineapple\"\n\nattr(,\"class\")\n[1] \"fruit\""
  },
  {
    "objectID": "programming/r_roop.html#define-new-generic-and-method",
    "href": "programming/r_roop.html#define-new-generic-and-method",
    "title": "OOP in R: S3",
    "section": "Define new generic and method",
    "text": "Define new generic and method\n[name of method] <- functionn(x){UseMethod(\"[name of method]\")}\nNow we define one generic function f, and two methods. One for class plus2, and another for class plus10.\n\nf <- function(x){UseMethod('f')} # define generic f\nf.plus2 <- function(x) x+2 # f method for class plus2\nf.plus10 <- function(x) x+10 # f method for class plus10\n\nNow we try to give the function some input. First use a numeric number, 1 (the class for a number is double and numeric).\n\nnumber <- 1\nf(number) # returns error, class of number does not match!\n\nError in UseMethod(\"f\"): no applicable method for 'f' applied to an object of class \"c('double', 'numeric')\"\n\n\nThis returns an error, because the class of number is not defined for function f (plus2, plus10).\n\n# can check what f(number) tried \n# none of these exist \nsloop::s3_dispatch(f(number))\n\n   f.double\n   f.numeric\n   f.default\n\n\nWe need to match it. Assign the number with plus2 class, and evaluate it. You can check which method has been used (dispatched).\n\n# fix: assign a class to number\nclass(number) <- 'plus2'\nf(number) # number+2, f.plus2 method\n\n[1] 3\nattr(,\"class\")\n[1] \"plus2\"\n\nsloop::s3_dispatch(f(number))\n\n=> f.plus2\n   f.default\n\n\nNow we try another number, but let it be plus10 class.\n\nnumberx <- 200\nclass(numberx) <- 'plus10'\nf(numberx)\n\n[1] 210\nattr(,\"class\")\n[1] \"plus10\"\n\nsloop::s3_dispatch(f(numberx))\n\n=> f.plus10\n   f.default"
  },
  {
    "objectID": "programming/r_roop.html#new-method-for-existing-generic-print",
    "href": "programming/r_roop.html#new-method-for-existing-generic-print",
    "title": "OOP in R: S3",
    "section": "New method for existing generic (print())",
    "text": "New method for existing generic (print())\nWe create the S3 object using the constructor defined above, fruit().\n\npineapple <- fruit('pineapple') # create by the constructor\npineapple\n\n$fruit_name\n[1] \"pineapple\"\n\nattr(,\"class\")\n[1] \"fruit\"\n\n\nThe output does not look very nice, we can modify what prints out. Since print() is an exisiting generic function, we do not need to define a new one (i.e. UseMethod). We define the new method directly: generic.your_class.\n\n# we do not need to define print() as generic, bec it IS already\n# directly define print.fruit\nprint.fruit <- function(x){\n  cat('I used constructor for my fruit:', x$fruit_name)\n}\n\nprint.fruit(pineapple)\n\nI used constructor for my fruit: pineapple"
  },
  {
    "objectID": "study_design/rct_design_overview.html",
    "href": "study_design/rct_design_overview.html",
    "title": "Clinical trial design: overview",
    "section": "",
    "text": "Considerations: choice of comparator and trial outcome measures (due to the grrowing number of treatmenet options, standard care would change over time), annd definition of target patient population (e.g. molecular profiling makes it possible to identify smaller subgroups of patient with defined tumor type)."
  },
  {
    "objectID": "study_design/rct_design_overview.html#types-of-trials-designs",
    "href": "study_design/rct_design_overview.html#types-of-trials-designs",
    "title": "Clinical trial design: overview",
    "section": "Types of trials designs",
    "text": "Types of trials designs\nPhase 1: 10-30, identify tolerable dose, information on drug metabolism, extretion and toxicity. Often not controlled\nPhase 2: 30-100, efficacy, safety and side effects,\nPhase 3: 100+, often randomized\nPhase 4: demonstration\n\nTypes of design\nPopulation have the disease outcome of interest; not healthy voluteers vs diseased.\nRandomisation unit: persons, two eyes of a person, or groups of persons\nComparison structure: parallel, crossover, group allocation\n\nParallel: simultaneous treatment and control groups, subjects randomly assigned to one group.\nCrossover: randomize of order in which treatments are received; TC or CT. Each patient is his/her own control. Washout period: time between two treatments.\n\nVariability reduced because less variability within patient than between patients. Fewer patients needed.\nDisadvantages: only certain treatments can use crossover design, treatment can’t have permanent effects. Carry-over effects from first period; washout needs to be long enough. Dropouts more significant, analysis may be more difficult: correlated outcomes.\nConstant intensity of underlying disease: chronic diseases (e.g. asthma, hypertension, arthritis) + short-term treatment effects (relief of signs or symptoms)\ne.g. morning dose vs evening dose\n\nGroup allocation: a group of subjects (community, school, clinic).\n\nExtensions of the parallel design: factorial, large simple\n\nFactorial: two interventions tested simultaneously. Can be presented in a 2 by 2 table (treatment A +-, treatment B +-); or 3 by 2 etc.\n\nInterested in main effect (if no interaction expected). A vs no A; B vs no B. The other treatment doesn’t matter.\n\nLarge simple: large number of patients, possibly from many study sites.\n\n\nTests other than superiority\n\nEquivalency: intervention response is close to control group response\nNon-inferiority: Treatment A (new) is at least as good as B (established). One-sided test, if A is worse than B, one can be rejected. Does not require as big sample size.\n\n\n\nAdaptive design\nPossible adaptations\n\nrandomization probabilities\nsample size (e.g. group sequential methods)\nvisit schedule: shorten/lengthen follow-up time, change number of timing of visits, treatments (dose/duration, concomitant meds)\nhypothesis tested"
  },
  {
    "objectID": "study_design/rct_design_overview.html#randomisation-and-masking",
    "href": "study_design/rct_design_overview.html#randomisation-and-masking",
    "title": "Clinical trial design: overview",
    "section": "Randomisation and masking",
    "text": "Randomisation and masking\nRationale:\n\navoid selection bias: prognostic factors related to treatment assignment\ntends to produce comparable treatment groups\n\n\nSchemes\nSimple randomization, restricted randomization, adaptive randomization\n\nSimple rz\nEach assignment is unpredictable, number of patients in each group should be equal in the long run.\nRisks: imbalances in number assigned to treatment groups, or confounding factors (gender, disease severity) -> reduced power\n\n\nRestricted rz\nSchemes with constraints to produce expected assignment ratio\n\nblocking\nstratification\n\nBlocking. Block of size 2 with treatment allocation ratio 1:1: A,B. Size 4: 2As, 2Bs. Need to be permuted: AABB, ABAB, … in total 6 combinations. Then choose one of the permutations.\nStratification. Ensure balance in treatment assignments with subgroups defined before rz. Limit to a few variables (highly related to outcome and/or logistical): e.g. clinic in a multicenter trial, surgeon (skills, procedures), stage of disease, demographic such as gender and age.\nUse these two together.\n\n\nAdaptive rz\nProbability of assignment does not remain constant, but determined by the current balance and composition of the groups.\n\nminimization: choose the design that gives the smallest imbalance.\nplay the winner: change allocation ratio or favor the better treatment based on the primary outcome. Need to evaluate outcomes relatively quickly.\n\n\n\n\nMasking (blinding)\nTreatment assignment is not known after rz.\n\npatient, clinical personnel, evaluators, data processors, …\nsingle (only participant), double (+ investigator), triple (+ data processors, …), quadruple …\n\nPurpose: remove bias related to treatment effects.\nDifferent levels of masking protects to different extent against bias in different aspects\n\ndata reporting\ndata collection / follow-up\ntesting, behaviors\noutcome assessment\n\nDecision to mask treatments\n\nethical?\npossible? can you make the treatment seem identical so the participants do not know?\ntrial design features: more important to mask subjective ones (e.g. alive or dead is the least subjective, hence wouldn’t benefit much; however if participants need to report effects that are not objectively measureable, they might report that treatment is better in contrast to placebo group)\nfeasible? cost-benefit, practicality (adherence)\n\nSometimes investigators in a double blind study might know which treatment is being assigned to participants, if the effect of drug is very obvious (both good or bad).\nUnmasking\n\nPlanned: inform participants once the trial finished\nUnplanned (discouraged): in the event of adverse event"
  },
  {
    "objectID": "study_design/rct_design_overview.html#outcomes-and-analysis",
    "href": "study_design/rct_design_overview.html#outcomes-and-analysis",
    "title": "Clinical trial design: overview",
    "section": "Outcomes and analysis",
    "text": "Outcomes and analysis\nOutcome: endpoint. It is a quantitaive measure.\nObjectives of the trial\n\nefficacy / effectiveness\nsafety\nprocess\ncosts\n\nExample: evaluate treatment for asthma\nOutcomes: exhaled nitrous oxide, lung function (spirometry measures), asthma symptoms (wheezing, night awakenings), …\nExample: evaluate a procedure to reduce perioperative morbidity\nOutcome considerations: time window (what is postoperative), specific events to be considered an outcome, procedures to establish outcomes, …\n\nMetrics for events as outcomes\n\ndichotomous: 1/0 for presence absense, normal abnormal; clinical state or cut-off value\ntime-to-event: in addition to dichotomous, add time dimension; allow for censoring. More powerful than dichotomous.\nrates: 1/0 but allow for repeats, analyze count or rate. Events within a person are usually not independent, need to account for it.\ncontinuous variables: value or change from baseline; standard units (lab values, scores). Need to define an important difference. Distributional assumptions more important.\nordinal scale: ranked categories (e.g. adverse event grading, 1-5). Difference between categories is usually qualitative.\n\nPatients opinions are subjective\n\nhealth status / change in status, e.g. pain relief, quality of life\nmasking is more important\nhawthorne / placebo effect: effect of being studies, usually positive\nquantify with standardized scales\n\n\n\nInfluence of outcomes on design\nEfficacy vs effectiveness:\nIn a vaccine trial, efficacy is the clinical case with lab confirmation; effectivenenss is the clinical case of influenza in a larger population, may or may not be confirmed.\nIn asthma, efficacy is FEV1, effectiveness is the decrease of the hospitalizations/steroid courses.\nConsiderations (3Bs)\n\nbiology: does outcome reflect a clinically relevant fact/change\nbiostatistics: detectable difference between groups is plausible and practical\nbudget: afford total N and can measure it reliably in every participant\n\nExample: HIV trial outcomes\n\nsurvival (deaths; AIDS status)\nimmunologic response\nvirologic response\nchange in patient status (e.g QoL)\nspecified toxicity\nother side effects\n\nChoice of primary outcome depends on the objectives or stage of research\n\nphase 1, emphasis on safety\nphase 2, short-term efficacy\nphase 3, long-term efficacy\nphase 4, long-term effectiveness\n\n\n\nIntention to treat ITT\nCross-overs after rz: some patients might have a treatment (yes or no) beyond what they were assigned to, e.g. refuse surgery or medical treatment\nNon-adherence during followup: some in treatment group refuse of can not tolerate certain treatment; while some in placebo group require medication or take on their own\n\n\nSubgroup analysis\nStratified analysis: estimate treatment effect separately in subgroups. Does not tell difference across different subgroups\nTest for interaction: use of main effect and interaction.\nIssue of multiple testing when doing a series of analyses\n\ninflate sample size to plan for subgroup analysis\nreport number of subgroup analyses performed\npossibly adjust for multiple comparisons\nreport CI instead of just p-values"
  },
  {
    "objectID": "study_design/rct_design_overview.html#reporting-results",
    "href": "study_design/rct_design_overview.html#reporting-results",
    "title": "Clinical trial design",
    "section": "Reporting results",
    "text": "Reporting results\n\nCONSORT\nConsolidated Standards of Reporting Trials\n25 item checklist. Not a guideline of how to do the trial; but a guideline for writers on how to report clearly.\nTitle\n\nkey design items\ntreatment(s) evaluated\ndisease or population studied\n\nAbstract\n\ndesign, method, results, conclusions\n\nIntroduction\n\nbackgrounds, rationale, establish equipoise (balance), systematic review, objectives / hypothesis\n\nMethod\n\nIRB review and approvals\ntrial design, allocation ratio\neligibility criteria\nsetting and location of the trial\nintervention - detailed enough to allow replication\noutcomes - primary, secondary, how assessed and defined\nsample size - how determined, interim analyses\nimportant changes during trial\nrandomization, allocation concealment, implementation\nmasking - who, how\nstatistical methods - primary and secondary; subgroup analyses\n\nConvenient to use a flow-chart\nBaseline characteristics by treatment group\np-values (common to not report in rct?)\n\n\nEvaluate literature\n\nLegitimacy, is it a fair comparison\nTrustworthy investigators? conflict of interest\nAdequate protections against bias\n\nrandomization\nmasking\nfollow-up design and execution\n\nITT analysis\n\nhave all events (outcomes) observed been counted in the treatment group assigned?\nvariations in denominators explained and consistent with good practice?\n\nappropriate subgroup analysis interpretation\n\nad hoc or post hoc status"
  },
  {
    "objectID": "reporting/reporting_overview.html",
    "href": "reporting/reporting_overview.html",
    "title": "Clinical trial: reporting results",
    "section": "",
    "text": "Coursera course Design and interpretation of clinical trials by Johns Hopkins University"
  },
  {
    "objectID": "reporting/reporting_overview.html#consort",
    "href": "reporting/reporting_overview.html#consort",
    "title": "Clinical trial: reporting results",
    "section": "CONSORT",
    "text": "CONSORT\nConsolidated Standards of Reporting Trials\n25 item checklist. Not a guideline of how to do the trial; but a guideline for writers on how to report clearly.\nTitle\n\nkey design items\ntreatment(s) evaluated\ndisease or population studied\n\nAbstract\n\ndesign, method, results, conclusions\n\nIntroduction\n\nbackgrounds, rationale, establish equipoise (balance), systematic review, objectives / hypothesis\n\nMethod\n\nIRB review and approvals\ntrial design, allocation ratio\neligibility criteria\nsetting and location of the trial\nintervention - detailed enough to allow replication\noutcomes - primary, secondary, how assessed and defined\nsample size - how determined, interim analyses\nimportant changes during trial\nrandomization, allocation concealment, implementation\nmasking - who, how\nstatistical methods - primary and secondary; subgroup analyses\n\nConvenient to use a flow-chart\nBaseline characteristics by treatment group\np-values (common to not report in rct?)\n\nEvaluate literature\n\nLegitimacy, is it a fair comparison\nTrustworthy investigators? conflict of interest\nAdequate protections against bias\n\nrandomization\nmasking\nfollow-up design and execution\n\nITT analysis\n\nhave all events (outcomes) observed been counted in the treatment group assigned?\nvariations in denominators explained and consistent with good practice?\n\nappropriate subgroup analysis interpretation\n\nad hoc or post hoc status"
  },
  {
    "objectID": "study_design/sample_size.html",
    "href": "study_design/sample_size.html",
    "title": "Sample size",
    "section": "",
    "text": "Sample size calculation is to determine the smallest number of subjects required, to detect a clinical meaningful effect. Why not recruiting as many as possible? Too expensive; or unethical (i.e. more people will be having potentially harmful or futile treatments)."
  },
  {
    "objectID": "dev/question_list.html",
    "href": "dev/question_list.html",
    "title": "Data Apothecary's Notes",
    "section": "",
    "text": "In phase 2, difference in design (sample size) for single arm and randomizedf\n\n\nUnbiased assignment of treatment. Break the link between prognosis and prescription (allocation). Application of statistical methods based on random sampling\nE.g. avoid giving the same treatment to group A that have significantly worse health condition\n\n\n\n\n\n\nMight not observe an effect in RCT, but effect in OBS studies\n\npossible no effect in RCT: trial too short to see effect; late stage of disease among candidates to see any improvements of treatment; different treatment in OBS and RCT; comparing initiators vs non-initiators (hence shorter trial period)\npossible effect in OBS: residual confounding: social and environmental exposures; some already using treatment before enrolment\nsampling bias, in OBS the asymptomatic subjects might be missed (or under reported) while in RCT you can count every subject\nsurvival bias: survived long enough to be enrolled in OBS, and those dead are not; hence boosting effect to prolong survival\n\n\n\n\nNon-inferiority trials adopt one-sided test\nEquivalence: if the alternative is simpler, cheaper or have fewer side effects. Aim is to determine if difference is between +- delta\n\n\n\nWhy would these type of design reduce type 1 error rate by accounting for correlation?"
  },
  {
    "objectID": "dev/question_list.html#survival-analysis",
    "href": "dev/question_list.html#survival-analysis",
    "title": "Data Apothecary's Notes",
    "section": "Survival analysis",
    "text": "Survival analysis\nCan you analyse duration data with t-test? Why not?"
  },
  {
    "objectID": "study_design/sample_size.html#relevant-conncepts",
    "href": "study_design/sample_size.html#relevant-conncepts",
    "title": "Sample size",
    "section": "Relevant conncepts",
    "text": "Relevant conncepts\nStudy design\n\nparallel: group 1 TxA, group 2 TxB\ncrossover: requires fewer ssample than parallel; but requires wash-out period. Group 1 TxA -> TxB; group 2 TxB -> TxA\n\nTests\n\n\\(\\mu_T, \\mu_s\\): mean of new Tx or standard procedure\n\\(\\delta\\): minimum clinically important difference\n\\(\\delta_{NI}\\): non-inferiority margin\n\n\n\n\n\n\n\n\n\nTest for\nH0\nH1\n\n\n\n\nEquality\n\\(\\mu_T - \\mu_s = 0\\)\n\\(\\mu_T - \\mu_s \\neq 0\\)\n\n\nEquivalence\n\\(|\\mu_T - \\mu_s| \\geq 0\\)\n\\(|\\mu_T - \\mu_s| < 0\\)\n\n\nSuperiority\n\\(\\mu_T - \\mu_s \\geq 0\\)\n\\(\\mu_T - \\mu_s < 0\\)\n\n\nNon-inferiority\n\\(\\mu_T - \\mu_s \\leq -\\delta_{NI}\\)\n\\(\\mu_T - \\mu_s \\geq -\\delta_{NI}\\)\n\n\n\nErrors\n\nType I error, significance level \\(\\alpha\\). P(reject H0 |H0). Usually set to 0.05\nType II error \\(\\beta\\). P(not reject H0 |H1).\nPower, \\(1 - \\beta\\). P(reject H0 |H1). Usually set to 80% or 90%\n\nPrimary outcome\n\ncan be categorical or continuous\nMinimal meaningful detecable difference MD: the smallest difference to be considered as clinically meaningful in the primary outcome\n\nDropout rate: need to be adjusted.\nAllocation ratio: unequal sample size.\nEffect size (Cohen’s d, f) should be found in the literature. In general,\n\nvery small, d = 0.01\nsmall, d = 0.2\nmedium, d = 0.5\nlarge, d = 0.8\nvery large, d = 1.2\nhuge, d = 2"
  },
  {
    "objectID": "study_design/sample_size.html#proportions",
    "href": "study_design/sample_size.html#proportions",
    "title": "Sample size",
    "section": "Proportions",
    "text": "Proportions\nCohen’s h is used as the effect size, \\(h = 2arcsin(\\sqrt{p_1} - 2arcsin(\\sqrt{p_2}))\\). Use 0.2, 0.5, 0.8 for small, medium and large effect sizes.\n\n# one group\npwr::pwr.p.test(h = 0.5, sig.level = 0.05, power = 0.8, alternative = 'two.sided')\n\n\n     proportion power calculation for binomial distribution (arcsine transformation) \n\n              h = 0.5\n              n = 31.39544\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\n# two groups\npwr::pwr.2p.test(h = 0.5, sig.level = 0.05, power = 0.8, alternative = 'two.sided')\n\n\n     Difference of proportion power calculation for binomial distribution (arcsine transformation) \n\n              h = 0.5\n              n = 62.79088\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\nNOTE: same sample sizes"
  },
  {
    "objectID": "study_design/sample_size.html#chi-square-test",
    "href": "study_design/sample_size.html#chi-square-test",
    "title": "Sample size",
    "section": "Chi-square test",
    "text": "Chi-square test\nCohen’s w. Use \\(l, k\\) to compute degrees of freedom.\n\n# k: number of groups; f: effect ssize\npwr::pwr.chisq.test(w = 0.3, df = (2-1)*(3-1), sig.level = 0.05, power = 0.8)\n\n\n     Chi squared power calculation \n\n              w = 0.3\n              N = 107.0521\n             df = 2\n      sig.level = 0.05\n          power = 0.8\n\nNOTE: N is the number of observations"
  },
  {
    "objectID": "study_design/sample_size.html#exact-test",
    "href": "study_design/sample_size.html#exact-test",
    "title": "Sample size",
    "section": "Exact test",
    "text": "Exact test\nNeed to specify the proportion in each group (control, treatment). Allocation ratio 1:1\n\nexact2x2::ss2x2(p0 = 0.2, p1 = 0.8, n1.over.n0 = 1, sig.level = 0.05, power = 0.8, \n                approx = F, print.steps = T, paired = F)\n\n[1] \"starting calculation at n0= 11  n1= 11\"\n[1] \"n0=11 n1=11 power=0.734302912043505\"\n[1] \"n0=19 n1=19 power=0.962100966603327\"\n[1] \"n0=15 n1=15 power=0.872315260457242\"\n[1] \"n0=13 n1=13 power=0.868827534112504\"\n[1] \"n0=12 n1=12 power=0.811527612034704\"\n\n\n\n     Power for Fisher's Exact Test \n\n          power = 0.8115276\n             n0 = 12\n             n1 = 12\n             p0 = 0.2\n             p1 = 0.8\n      sig.level = 0.05\n    alternative = two.sided\n  nullOddsRatio = 1\n\nNOTE: errbound= 1e-06"
  },
  {
    "objectID": "study_design/sample_size_2.html",
    "href": "study_design/sample_size_2.html",
    "title": "Sample size (part II)",
    "section": "",
    "text": "(This is the part II on sample size calculation)\n\nCorrelation\nCorrelation coefficient is used for effect size measure. Usse 0.1, 0.3, 0.5 to represent small, medium and large sizes.\n\n# correlation coeff\npwr::pwr.r.test(r = 0.3, sig.level = 0.05, power = 0.8, alternative = 'two.sided')\n\n\n     approximate correlation power calculation (arctangh transformation) \n\n              n = 84.07364\n              r = 0.3\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\n\n\n\nLinear regression (F-test)\nF-test for linear regression is testinng whether \\(R^2\\) is greater than zero (one-sided). \\(R^2\\) is the explained variance by using the predictors, \\(R^2 = 0.3\\) means that 30% of the variance are explained by the model.\nCohen’s f2, based on \\(R^2\\), goodness of fit (\\(f2 = R^2/(1-R^2)\\)). use 0.02, 0.15, 0.35 to represent small, medium and large effect sizes.\n\nu: number of predictors\nv: n-u-1\nas a result, sample size n = v+u+1\n\n\n# effect size f2 = 0.15; use u=3 predictors\npwr::pwr.f2.test(u = 3, f2 = 0.3, sig.level = 0.05, power = 0.8)\n\n\n     Multiple regression power calculation \n\n              u = 3\n              v = 36.47078\n             f2 = 0.3\n      sig.level = 0.05\n          power = 0.8\n\n\nHere v = 73, sample size is 73+3+1 = 77.\nAlternatively, can use pwrss::pwrss.f.reg(). The parameter is r2 rather than f2 (but can also use f2).\n\npwrss::pwrss.f.reg(r2 = 0.3, k = 0.3, power = 0.8, alpha = 0.05)\n\n Linear Regression (F test) \n R-squared Deviation from 0 (zero) \n H0: r2 = 0 \n HA: r2 > 0 \n ------------------------------ \n  Statistical power = 0.8 \n  n = 14 \n ------------------------------ \n Numerator degrees of freedom = 0.3 \n Denominator degrees of freedom = 12.415 \n Non-centrality parameter = 5.878 \n Type I error rate = 0.05 \n Type II error rate = 0.2 \n\n# should be equivalent to\n# pwr::pwr.f2.test(u = 3, f2 = 0.3/0.7, sig.level = 0.05, power = 0.8)\n\n\n\nGLM\n\nResources\n\nSample size calculation in clinical trial using R.\nPark et al. 2023. https://doi.org/10.7602/jmis.2023.26.1.9\nBulus, M (2023) pwrss: Statistical Power and Sample Size Calculation Tools. R package version 0.3.1. https://CRAN.R-project.org/package=pwrss. Vignette documentation"
  },
  {
    "objectID": "study_design/sample_size_1.html",
    "href": "study_design/sample_size_1.html",
    "title": "Sample size (part I)",
    "section": "",
    "text": "(This is the part I on sample size calculation)\nSample size calculation is to determine the smallest number of subjects required, to detect a clinical meaningful effect. Why not recruiting as many as possible? Too expensive; or unethical (i.e. more people will be having potentially harmful or futile treatments)."
  },
  {
    "objectID": "study_design/sample_size_1.html#relevant-concepts",
    "href": "study_design/sample_size_1.html#relevant-concepts",
    "title": "Sample size (part I)",
    "section": "Relevant concepts",
    "text": "Relevant concepts\nStudy design\n\nparallel: group 1 TxA, group 2 TxB\ncrossover: requires fewer ssample than parallel; but requires wash-out period. Group 1 TxA -> TxB; group 2 TxB -> TxA\n\nTests\n\n\\(\\mu_T, \\mu_s\\): mean of new Tx or standard procedure\n\\(\\delta\\): minimum clinically important difference\n\\(\\delta_{NI}\\): non-inferiority margin\n\n\n\n\n\n\n\n\n\nTest for\nH0\nH1\n\n\n\n\nEquality\n\\(\\mu_T - \\mu_s = 0\\)\n\\(\\mu_T - \\mu_s \\neq 0\\)\n\n\nEquivalence\n\\(|\\mu_T - \\mu_s| \\geq 0\\)\n\\(|\\mu_T - \\mu_s| < 0\\)\n\n\nSuperiority\n\\(\\mu_T - \\mu_s \\geq 0\\)\n\\(\\mu_T - \\mu_s < 0\\)\n\n\nNon-inferiority\n\\(\\mu_T - \\mu_s \\leq -\\delta_{NI}\\)\n\\(\\mu_T - \\mu_s \\geq -\\delta_{NI}\\)\n\n\n\nErrors\n\nType I error, significance level \\(\\alpha\\). P(reject H0 |H0). Usually set to 0.05\nType II error \\(\\beta\\). P(not reject H0 |H1).\nPower, \\(1 - \\beta\\). P(reject H0 |H1). Usually set to 80% or 90%\n\nPrimary outcome\n\ncan be categorical or continuous\nMinimal meaningful detecable difference MD: the smallest difference to be considered as clinically meaningful in the primary outcome\n\nDropout rate: need to be adjusted.\nAllocation ratio: unequal sample size.\nEffect size (Cohen’s d, f) should be found in the literature. In general,\n\nvery small, d = 0.01\nsmall, d = 0.2\nmedium, d = 0.5\nlarge, d = 0.8\nvery large, d = 1.2\nhuge, d = 2"
  },
  {
    "objectID": "study_design/sample_size_1.html#two-sample-t-test",
    "href": "study_design/sample_size_1.html#two-sample-t-test",
    "title": "Sample size (part I)",
    "section": "Two sample t-test",
    "text": "Two sample t-test\nNote that this result is for one group: in total it’s times two.\n\n# effect size: 0.5\npwr::pwr.t.test(d = 0.5, sig.level = 0.05, power = 0.8, type = 'two.sample', alternative = 'two.sided')\n\n\n     Two-sample t test power calculation \n\n              n = 63.76561\n              d = 0.5\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\nNOTE: n is number in *each* group"
  },
  {
    "objectID": "study_design/sample_size_1.html#anova",
    "href": "study_design/sample_size_1.html#anova",
    "title": "Sample size (part I)",
    "section": "ANOVA",
    "text": "ANOVA\nResult is for each group.\n\n# k: number of groups; f: effect ssize\npwr::pwr.anova.test(k = 3, f = 0.25, sig.level = 0.05, power = 0.8)\n\n\n     Balanced one-way analysis of variance power calculation \n\n              k = 3\n              n = 52.3966\n              f = 0.25\n      sig.level = 0.05\n          power = 0.8\n\nNOTE: n is number in each group"
  },
  {
    "objectID": "study_design/sample_size_1.html#proportions",
    "href": "study_design/sample_size_1.html#proportions",
    "title": "Sample size (part I)",
    "section": "Proportions",
    "text": "Proportions\nCohen’s h is used as the effect size, \\(h = 2arcsin(\\sqrt{p_1} - 2arcsin(\\sqrt{p_2}))\\). Use 0.2, 0.5, 0.8 for small, medium and large effect sizes.\n\n# one group\npwr::pwr.p.test(h = 0.5, sig.level = 0.05, power = 0.8, alternative = 'two.sided')\n\n\n     proportion power calculation for binomial distribution (arcsine transformation) \n\n              h = 0.5\n              n = 31.39544\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\n# two groups\npwr::pwr.2p.test(h = 0.5, sig.level = 0.05, power = 0.8, alternative = 'two.sided')\n\n\n     Difference of proportion power calculation for binomial distribution (arcsine transformation) \n\n              h = 0.5\n              n = 62.79088\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\nNOTE: same sample sizes"
  },
  {
    "objectID": "study_design/sample_size_1.html#chi-square-test",
    "href": "study_design/sample_size_1.html#chi-square-test",
    "title": "Sample size (part I)",
    "section": "Chi-square test",
    "text": "Chi-square test\nCohen’s w. Use \\(l, k\\) to compute degrees of freedom.\n\n# k: number of groups; f: effect ssize\npwr::pwr.chisq.test(w = 0.3, df = (2-1)*(3-1), sig.level = 0.05, power = 0.8)\n\n\n     Chi squared power calculation \n\n              w = 0.3\n              N = 107.0521\n             df = 2\n      sig.level = 0.05\n          power = 0.8\n\nNOTE: N is the number of observations"
  },
  {
    "objectID": "study_design/sample_size_1.html#exact-test",
    "href": "study_design/sample_size_1.html#exact-test",
    "title": "Sample size (part I)",
    "section": "Exact test",
    "text": "Exact test\nNeed to specify the proportion in each group (control, treatment). Allocation ratio 1:1\n\nexact2x2::ss2x2(p0 = 0.2, p1 = 0.8, n1.over.n0 = 1, sig.level = 0.05, power = 0.8, \n                approx = F, print.steps = T, paired = F)\n\n[1] \"starting calculation at n0= 11  n1= 11\"\n[1] \"n0=11 n1=11 power=0.734302912043505\"\n[1] \"n0=19 n1=19 power=0.962100966603327\"\n[1] \"n0=15 n1=15 power=0.872315260457242\"\n[1] \"n0=13 n1=13 power=0.868827534112504\"\n[1] \"n0=12 n1=12 power=0.811527612034704\"\n\n\n\n     Power for Fisher's Exact Test \n\n          power = 0.8115276\n             n0 = 12\n             n1 = 12\n             p0 = 0.2\n             p1 = 0.8\n      sig.level = 0.05\n    alternative = two.sided\n  nullOddsRatio = 1\n\nNOTE: errbound= 1e-06"
  },
  {
    "objectID": "programming/web_basics.html",
    "href": "programming/web_basics.html",
    "title": "Web basics",
    "section": "",
    "text": "Resources\nhttps://jakobtures.github.io/web-scraping/rvest1.html"
  },
  {
    "objectID": "programming/web_basics.html#attributes",
    "href": "programming/web_basics.html#attributes",
    "title": "Web basics",
    "section": "Attributes",
    "text": "Attributes\nBasic syntax: <tag attribute=\"value\">...</tag>. No space between equal sign and value.\n\nWeb link\n<a href=\"https://jakobtures.github.io/web-scraping/html.html\">This is a link</a>\nThe code above creates an active link. The code below also points to this link, but opens in a new page using target=\"_blank\".\n<a href=\"https://jakobtures.github.io/web-scraping/html.html\" target=\"_blank\">This is a link</a>\n\n\nImages\nTwo images, one with adjusted size\n<img src=\"https://jakobtures.github.io/web-scraping/Rlogo.png\">\n<img src=\"https://jakobtures.github.io/web-scraping/Rlogo.png\" width=\"100\" height=\"100\">\nCan combine image with link, by puttinng the links within the anchor.\n<a href=\"https://www.r-project.org/\" target=\"_blank\"><img src=\"https://jakobtures.github.io/web-scraping/Rlogo.png\"></a>"
  },
  {
    "objectID": "programming/web_basics.html#entities",
    "href": "programming/web_basics.html#entities",
    "title": "Web basics",
    "section": "Entities",
    "text": "Entities\nCoded representations of certain characters, &..;. For example,\n\n&lt; less than, <\n&quot; ”\n&amp; &: ampersand\n&nbsp; non-breaking space"
  },
  {
    "objectID": "programming/web_basics.html#html-tags",
    "href": "programming/web_basics.html#html-tags",
    "title": "Web basics",
    "section": "HTML tags",
    "text": "HTML tags\n<!DOCTYPE html>\n\n<html>\n  <head>\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <b>Hello World!</b>\n  </body>\n</html>\nLine 1: declare which version of HTML. For now it is 5\nThe rest are different tags.\nImportant tags:\n\nheader, <h1>, <h2>, ..., <h6>\ndivision or span, <div>, <span>\nparagraph, <p>\nline break, <br>. This does not need to be closed with </br>\nbold, italics <b>, <i>\nlists - ordered <ol>, unordered <ul>. Within the tags, use <li>\ntables. Lines are defined by <tr> (table row), table header <th> and <td>, table data.\nanchor, <a>, useful for url links: but it is different from <link> tag (which links to files such as JS or CSS)."
  },
  {
    "objectID": "study_design/rct_design_overview.html#intention-to-treat-itt",
    "href": "study_design/rct_design_overview.html#intention-to-treat-itt",
    "title": "Clinical trial design: overview",
    "section": "Intention to treat ITT",
    "text": "Intention to treat ITT\nCross-overs after rz: some patients might have a treatment (yes or no) beyond what they were assigned to, e.g. refuse surgery or medical treatment\nNon-adherence during followup: some in treatment group refuse of can not tolerate certain treatment; while some in placebo group require medication or take on their own"
  },
  {
    "objectID": "study_design/rct_design_overview.html#subgroup-analysis",
    "href": "study_design/rct_design_overview.html#subgroup-analysis",
    "title": "Clinical trial design: overview",
    "section": "Subgroup analysis",
    "text": "Subgroup analysis\nStratified analysis: estimate treatment effect separately in subgroups. Does not tell difference across different subgroups\nTest for interaction: use of main effect and interaction.\nIssue of multiple testing when doing a series of analyses\n\ninflate sample size to plan for subgroup analysis\nreport number of subgroup analyses performed\npossibly adjust for multiple comparisons\nreport CI instead of just p-values\n\n\nResources\n\nCoursera course Design and interpretation of clinical trials by Johns Hopkins University\nBook Fast Facts: Clinical trialss inn oncology: The fundamentals"
  },
  {
    "objectID": "study_design/adaptive_design.html",
    "href": "study_design/adaptive_design.html",
    "title": "Adaptive design: overview",
    "section": "",
    "text": "Resources\n\nR package rpact and tutorial\nR package gsDesign and tutorial\n\n\nSequential design\nNumber of patient isn’t set in advance. A good group sequential design can reduce the sample size needed, while keeping the desired statistical power and controlling the overall type I error.\nGSD includes pre-determined number of stages (interim, final). Each stage specified by\n\nsample size\ncritical values\nstopping criterion to support or reject null hypothesis\n\nTBC"
  },
  {
    "objectID": "inference/overview.html",
    "href": "inference/overview.html",
    "title": "Overview: causal inference",
    "section": "",
    "text": "Introduction\nSmoking example\n\ndoes smoking cause lung cancer?\ndoes lung cancer cause people to smoke?\nis there a third factor that causes both smoking and lung cancer?\n\nPotential outcome framework\n\\(Y_i = Y_i(z)\\) if \\(Z_i = z\\), under treatment Z = z\nEstimand: a precise description of the treatment effect"
  },
  {
    "objectID": "inference/estimation_gcomp_ipw.html",
    "href": "inference/estimation_gcomp_ipw.html",
    "title": "Estimation",
    "section": "",
    "text": "Introduction\nSmoking example\n\ndoes smoking cause lung cancer?\ndoes lung cancer cause people to smoke?\nis there a third factor that causes both smoking and lung cancer?\n\nPotential outcome framework\n\\(Y_i = Y_i(z)\\) if \\(Z_i = z\\), under treatment Z = z\nEstimand: a precise description of the treatment effect"
  },
  {
    "objectID": "models/survival.html",
    "href": "models/survival.html",
    "title": "Survival",
    "section": "",
    "text": "Links\nhttps://www.emilyzabor.com/tutorials/survival_analysis_in_r_tutorial.html\nhttps://rviews.rstudio.com/2017/09/25/survival-analysis-with-r/\nhttps://www.danieldsjoberg.com/ggsurvfit/\nhttps://www.coursera.org/learn/survival-analysis-r-public-health\nhttps://www.emilyzabor.com/tutorials/survival_analysis_in_r_tutorial.html\nhttps://rviews.rstudio.com/2017/09/25/survival-analysis-with-r/\njmpost: combines survival analysis, mixed effect model https://genentech.github.io/jmpost/main/"
  },
  {
    "objectID": "models/mixed_models.html",
    "href": "models/mixed_models.html",
    "title": "Mixed models",
    "section": "",
    "text": "Yet to be filled in"
  },
  {
    "objectID": "inference/rwd_rwe.html",
    "href": "inference/rwd_rwe.html",
    "title": "Real-world Data, Real-world Evidence",
    "section": "",
    "text": "RWD is any data collected outside clinical trial setting. It is most common in Phase IV trials.\n(The general benefits and disadvantages of RWD is coherent with EHR data)\nTherapheutic areas: oncology, rare diseases, infectious diseases among others"
  },
  {
    "objectID": "inference/covariate_adjustment.html",
    "href": "inference/covariate_adjustment.html",
    "title": "Covariate adjustment",
    "section": "",
    "text": "https://jbetz-jhu.github.io/CovariateAdjustmentTutorial/\nBaseline covariates are variables measured prior to randomization, expected to have strong association with outcome. Potential confounding occurs when the distribution of baseline covariates between treatment groups are imbalanced.\nTo address confounding:\n\ndesign stage: stratified randomization to reduce imbalance\nanalysis stage: covariate adjustment\n\nBenefits:\n\nreduce sample size\nimprove precision - smaller CI, higher power\nsome CA do not depend on a correctly specified model\n\nRecent FDA guidance requires distinction between conditional and marginal treatment effects. These two coincide in linear models, but not in non-linear models (e.g. binary, ordinal, count, time-to-event outcomes)."
  },
  {
    "objectID": "programming/webr.html",
    "href": "programming/webr.html",
    "title": "WebR: Use with an existing quarto website",
    "section": "",
    "text": "When you create a new quarto website, inside _quarto.yml the output-dir isn’t specified. In this case, when you follow the tutorial by James J Balamuta (creator of the extension quarto-webr) you will be able to render a functional webR page. Yet, if you already have an existing quarto website deployed by Github actions (with output-dir: docs), the default solution might not work.\nFortunately, the fix is simple enough. I think this feature will be added to the future versions of quarto-webr extension, because this extension is just great."
  },
  {
    "objectID": "programming/shiny.html",
    "href": "programming/shiny.html",
    "title": "Shiny",
    "section": "",
    "text": "Number of bins:"
  },
  {
    "objectID": "programming/webr.html#installation",
    "href": "programming/webr.html#installation",
    "title": "WebR: Use with an existing quarto website",
    "section": "Installation",
    "text": "Installation\nOpen terminal, install the extension in the root of the current quarto project. This is important, as quarto extensions are project-based, i.e. need to be included in each quarto project.\nquarto add coatless/quarto-webr"
  },
  {
    "objectID": "programming/webr.html#configuration",
    "href": "programming/webr.html#configuration",
    "title": "WebR: Use with an existing quarto website",
    "section": "Configuration",
    "text": "Configuration\nAdd the following lines in the yaml header in the quarto file you want to run webR. For example,\ntitle: \"WebR demo\"\nengine: knitr\nformat: html\nfilters: \n  - webr\nwebr: \n  channel-type: \"post-message\"\nImportant bits:\n\nspecify engine to knitr\nspecify filters to - webr. This could alternatively be specified in the overall _quarto.yml file to apply to every qt document.\nadd channel-type: \"post-message\" under webr. No dash in front."
  },
  {
    "objectID": "programming/webr.html#configuration-1",
    "href": "programming/webr.html#configuration-1",
    "title": "WebR",
    "section": "Configuration",
    "text": "Configuration\nNow use the curly bracket {webr-r} for your code chunk (which used to be just {r}),\nLoading\n  webR...\n\n\n  \n\n\nA histogram that changes every time you click RUN CODE\nLoading\n  webR..."
  },
  {
    "objectID": "programming/webr.html#execution",
    "href": "programming/webr.html#execution",
    "title": "WebR: Use with an existing quarto website",
    "section": "Execution",
    "text": "Execution\nNow use the curly bracket {webr-r} for your code chunk (which used to be just {r}),\nLoading\n  webR...\n\n\n  \n\n\nA histogram that changes every time you click RUN CODE. This proves that we are running interactively the R code inside the web browser.\nLoading\n  webR..."
  },
  {
    "objectID": "programming/r_pkg_wf.html",
    "href": "programming/r_pkg_wf.html",
    "title": "R package Engineering Workflow",
    "section": "",
    "text": "Useful references:\nSteps suggested:"
  },
  {
    "objectID": "programming/r_pkg_wf.html#step-2-design-docs",
    "href": "programming/r_pkg_wf.html#step-2-design-docs",
    "title": "R package Engineering Workflow",
    "section": "Step 2: Design docs",
    "text": "Step 2: Design docs\nPurpose and scope: the package pkg_name shall …\nPackage requirements:\n\nlibrary(gt)\ndf &lt;- data.frame(obligation = c('Duty', 'Desire', 'Intension'), \n                 keyword = c('shall', 'should', 'will'), \n                 description = c('must have', 'nice to have', 'optional'))\n\ngt(df) |&gt; \n  cols_label(obligation = md('**Obligation**'), \n             keyword = md('**Key word**'), \n             description = md('**Description**'))\n\n\n\n\n\n  \n    \n    \n      Obligation\n      Key word\n      Description\n    \n  \n  \n    Duty\nshall\nmust have\n    Desire\nshould\nnice to have\n    Intension\nwill\noptional\n  \n  \n  \n\n\n\n\nUse some documentation tools (md, qmd, or diagram draw.io)"
  },
  {
    "objectID": "programming/r_pkg_wf.html#step-3-packaging",
    "href": "programming/r_pkg_wf.html#step-3-packaging",
    "title": "R package Engineering Workflow",
    "section": "Step 3: packaging",
    "text": "Step 3: packaging\n\ncreate basic project\nCopy and paste exisint R scripts, refactor if necessary (i.e. give self-explanatory names)\nCreate R generic functions (print, summary)\nDocument\n\n\n\n\n\n\n\nTo do\n\n\n\n\nreturn result as a list, with class attribute\nreturn argument"
  },
  {
    "objectID": "programming/r_pkg_wf.html#step-4-qualiy-code",
    "href": "programming/r_pkg_wf.html#step-4-qualiy-code",
    "title": "R package Engineering Workflow",
    "section": "Step 4: Qualiy code",
    "text": "Step 4: Qualiy code\nIt is important to have clean code, so that it is easier to read and maintain; easier to exntend; and the code runs faster.\n\nnaming. Make the function and argument names easy to understand\nformatting. Indentation, spacing, bracketing should be consistent\nsimplicity. Avoid unnecesary complexity. Split large source files into smaller chunks, preferably less than 1000 lines.\nsingle responsibility principle (SRP). Each function should have ONE single purpose.\ndon’t repeat yourself. Make a function!\ncomment.\nerror handling. Include error handling messages. tryCatch()\n\n\n\n\n\n\n\nTo do\n\n\n\n\nError handling.\n\n\n\n\nTesting\nWhy do you need unit tests? In short, increase reliability and maintainability of the code.\nOther types of tests exist: integration testing, performance testing, snapshot testing. Package testthat allows not only unit tests, but also the other types of tests.\n\n\n\n\n\n\nNote\n\n\n\nA more comprehensive guide see my other note: R package: tests\n\n\nTest coverage: use covr. Ideally should cover 100%.\n\n\nPackage quality check\nR CMD Check\n\n\nCode style\nUse tidyverse style guide.\n\nstyler: restyle text, files or entire project.\nlintr: perform automated checks to confirm that our code conform to the style guide.\ndevtools::spell_check."
  },
  {
    "objectID": "programming/r_pkg_tests.html",
    "href": "programming/r_pkg_tests.html",
    "title": "R package: tests",
    "section": "",
    "text": "Useful references:\nUnit test: tests whether your function returns values as expected.\nBenefits:\nExample situations:"
  },
  {
    "objectID": "programming/r_pkg_wf.html#step-5.-publication",
    "href": "programming/r_pkg_wf.html#step-5.-publication",
    "title": "R package Engineering Workflow",
    "section": "Step 5. Publication",
    "text": "Step 5. Publication\npkgdown website might be the most useful place.\nVersioning\n\nx.y.z\nx is major, breaking changes\ny is minor, new features\nz is patch, bug fixes\ntry usethis::use_version()"
  },
  {
    "objectID": "programming/revealjs.html",
    "href": "programming/revealjs.html",
    "title": "Make slides with reveal.js",
    "section": "",
    "text": "iframe stands for inline frame. It is an HTML element that loads another HTML page within the document."
  },
  {
    "objectID": "programming/test_slides.html#hello-there",
    "href": "programming/test_slides.html#hello-there",
    "title": "Quarto Presentations",
    "section": "Hello, There",
    "text": "Hello, There\nThis presentation will show you examples of what you can do with Quarto and Reveal.js, including:\n\nPresenting code and LaTeX equations\nIncluding computations in slide output\nImage, video, and iframe backgrounds\nFancy transitions and animations\nPrinting to PDF\n\n\n\nhttps://quarto.org"
  },
  {
    "objectID": "programming/revealjs.html#embed-in-your-own-web-page",
    "href": "programming/revealjs.html#embed-in-your-own-web-page",
    "title": "Make slides with reveal.js",
    "section": "",
    "text": "iframe stands for inline frame. It is an HTML element that loads another HTML page within the document."
  },
  {
    "objectID": "programming/index.html#r-programming",
    "href": "programming/index.html#r-programming",
    "title": "Programming",
    "section": "",
    "text": "R related topics from basic to advanced.\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nOOP in R: S3\n\n\n\n\nError handling in R\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "programming/index.html#r-package",
    "href": "programming/index.html#r-package",
    "title": "Programming",
    "section": "R package",
    "text": "R package\nR package development\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nR package: tests\n\n\n\n\nR package Engineering Workflow\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "programming/index.html#web",
    "href": "programming/index.html#web",
    "title": "Programming",
    "section": "Web",
    "text": "Web\nWeb and quarto topics\n\n\n\n\n\n\nTitle\n\n\n\n\n\n\nWebR: Use with an existing quarto website\n\n\n\n\nWeb basics\n\n\n\n\nMake slides with reveal.js\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "programming/r_pkg_0_wf.html",
    "href": "programming/r_pkg_0_wf.html",
    "title": "R package Engineering Workflow",
    "section": "",
    "text": "Useful references:\nSteps suggested:"
  },
  {
    "objectID": "programming/r_pkg_0_wf.html#step-2-design-docs",
    "href": "programming/r_pkg_0_wf.html#step-2-design-docs",
    "title": "R package Engineering Workflow",
    "section": "Step 2: Design docs",
    "text": "Step 2: Design docs\nPurpose and scope: the package pkg_name shall …\nPackage requirements:\n\nlibrary(gt)\ndf &lt;- data.frame(obligation = c('Duty', 'Desire', 'Intension'), \n                 keyword = c('shall', 'should', 'will'), \n                 description = c('must have', 'nice to have', 'optional'))\n\ngt(df) |&gt; \n  cols_label(obligation = md('**Obligation**'), \n             keyword = md('**Key word**'), \n             description = md('**Description**'))\n\n\n\n\n\n  \n    \n    \n      Obligation\n      Key word\n      Description\n    \n  \n  \n    Duty\nshall\nmust have\n    Desire\nshould\nnice to have\n    Intension\nwill\noptional\n  \n  \n  \n\n\n\n\nUse some documentation tools (md, qmd, or diagram draw.io)"
  },
  {
    "objectID": "programming/r_pkg_0_wf.html#step-3-packaging",
    "href": "programming/r_pkg_0_wf.html#step-3-packaging",
    "title": "R package Engineering Workflow",
    "section": "Step 3: packaging",
    "text": "Step 3: packaging\n\ncreate basic project\nCopy and paste exisint R scripts, refactor if necessary (i.e. give self-explanatory names)\nCreate R generic functions (print, summary)\nDocument\n\n\n\n\n\n\n\nTo do\n\n\n\n\nreturn result as a list, with class attribute\nreturn argument"
  },
  {
    "objectID": "programming/r_pkg_0_wf.html#step-4-qualiy-code",
    "href": "programming/r_pkg_0_wf.html#step-4-qualiy-code",
    "title": "R package Engineering Workflow",
    "section": "Step 4: Qualiy code",
    "text": "Step 4: Qualiy code\nIt is important to have clean code, so that it is easier to read and maintain; easier to exntend; and the code runs faster.\n\nnaming. Make the function and argument names easy to understand\nformatting. Indentation, spacing, bracketing should be consistent\nsimplicity. Avoid unnecesary complexity. Split large source files into smaller chunks, preferably less than 1000 lines.\nsingle responsibility principle (SRP). Each function should have ONE single purpose.\ndon’t repeat yourself. Make a function!\ncomment.\nerror handling. Include error handling messages. tryCatch()\n\n\n\n\n\n\n\nTo do\n\n\n\n\nError handling.\n\n\n\n\nTesting\nWhy do you need unit tests? In short, increase reliability and maintainability of the code.\nOther types of tests exist: integration testing, performance testing, snapshot testing. Package testthat allows not only unit tests, but also the other types of tests.\n\n\n\n\n\n\nNote\n\n\n\nA more comprehensive guide see my other note: R package: tests\n\n\nTest coverage: use covr. Ideally should cover 100%.\n\n\nPackage quality check\nR CMD Check\n\n\nCode style\nUse tidyverse style guide.\n\nstyler: restyle text, files or entire project.\nlintr: perform automated checks to confirm that our code conform to the style guide.\ndevtools::spell_check."
  },
  {
    "objectID": "programming/r_pkg_0_wf.html#step-5.-publication",
    "href": "programming/r_pkg_0_wf.html#step-5.-publication",
    "title": "R package Engineering Workflow",
    "section": "Step 5. Publication",
    "text": "Step 5. Publication\npkgdown website might be the most useful place.\nVersioning\n\nx.y.z\nx is major, breaking changes\ny is minor, new features\nz is patch, bug fixes\ntry usethis::use_version()\n\nAdding badges\n\n# lifecycle\nusethis::use_lifecycle_badge(stage = 'experimental')\n# R-CMD-check \nusethis::use_github_action_check_standard()"
  },
  {
    "objectID": "programming/intv_rdev_topics.html",
    "href": "programming/intv_rdev_topics.html",
    "title": "Topic coverage: R developer",
    "section": "",
    "text": "This topic list does NOT include\n\n\n\n\nshiny developer\nstatistical programmer (would require more on specific statistical packages)\ndata scientist with a focus on engineering\n\n\n\nResources:\n\nAdvanced R\nR packages (2e)\n\nTypical thought process:\n\nWhat is x\nWhen do you use x\nWhat are the pros and cons of x\n\n\n\n\n\n\n\nScattered knowledge dumpster\n\n\n\n\nvector: diff na.rm = T and na.omit(x)\nenvironment: function in global env. what does it mean (scope)\nerror message: difference between stop() and rlang::abort()\n\ndata manipulation\n\ndata table: why do I prefer to use it compared to tibble and df\n\n\n\n\nR Programming\nFoundations\n\nData structures in R\nEnvironments\n\nFunctions and functional programming\n\napply() functions\nEvaluation\nArgument\n\nOOP\n\nS3 generics\n\nDebugging\n\nSomething related to debugging\n\n\n\nData manipulation\n\nTidyverse suite\nText processing\n\n\n\nR package\n\nDevelopment workflow\nR code and functions\nData\nDESCRIPTION\nDependencies and enviroment\nTesting\nDocumentation: code\nDocumentation: vignettes\nDoucmentation: website\nMaintenance"
  },
  {
    "objectID": "programming/r_pkg_tests.html#use-testthat-in-a-package",
    "href": "programming/r_pkg_tests.html#use-testthat-in-a-package",
    "title": "R package: tests",
    "section": "Use testthat in a package",
    "text": "Use testthat in a package\n\n1. Initialize\nCreate tests/testthat/ directory\n\nusethis::use_testthat(3)\n\nThis creates the directory with\n\nan empty folder testthat where you write your tests\nan R script testthat.R where tests are run when R CMD check is run. Do not modify this file.\n\n\n\n2. Create a test\nTest files must have names that start with test. For example, a function is R/fn_name.R, then test is tests/testthat/test-fn_name.R.\n\nusethis::use_test('testname')\n\n\n\n3. Run a test\n\ntestthat::test_file('tests/testthat/test-foofy.R')\nRun Tests button\ndevtools::test() for entire test suite. Cmd + Shift + T\ndevtools::check()\n\n\n\n\n\n\n\nA workflow worked for me\n\n\n\n\nCreate a simple function\nCreate a test file immediately, with clear naming. Inside this test file, can write various tests for the same function.\n\n\nhave at least a test that expects the correct result (expect_identical() or else)\nhave at least a test that expects error, (expect_error()). Inside the original function, error should be thrown by rlang::abort().\n\n\nRun test\nRun test coverage, covr::package_coverage() or covr::code_coverage()\nCheck"
  },
  {
    "objectID": "programming/r_functions.html",
    "href": "programming/r_functions.html",
    "title": "Functions",
    "section": "",
    "text": "Special argument .... This type of argument is varargs (variable arguments). The function can take any numbers of arguments.\nPrimary uses:\n\nyour function takes a function as an argument, and we want to pass additional arguments\nS3 generic, need to allow methods to take extra arguments\n\nDownsides:\n\nneed to explain where the arguments go to\nmisspelled argument will not raise an error\n\n\n\nThe ... can be something like na.rm = F.\nGiven that the first argument is being averaged upon, if a vector is not specified correctly, only the first element is being averaged; and the other elements are treated as additional arguments that are not necessarily used.\n\n# mean(c(1,2,3)) \nmean(1, 2, 3)\n\n[1] 1\n\nmean(c(1, 2), 3)\n\n[1] 1.5\n\n\n\nfplus &lt;- function(a, ...){\n  list(sum(a), ...)\n}\nfplus(a = c(1,2,3))\n\n[[1]]\n[1] 6\n\nfplus(a = c(1,2,3), 4)\n\n[[1]]\n[1] 6\n\n[[2]]\n[1] 4\n\n\n\nf1 &lt;- function(a, ...){\n  args &lt;- list(...)\n  if('y' %in% names(args)){\n    args$y &lt;- 0.5 + args$y\n    do.call(f2, args) # second arg need to be a list\n  }else{\n    a+1\n  }\n\n}\nf2 &lt;- function(y){return(y)}"
  },
  {
    "objectID": "programming/r_functions.html#dot-dot-dot",
    "href": "programming/r_functions.html#dot-dot-dot",
    "title": "Functions",
    "section": "",
    "text": "Special argument .... This type of argument is varargs (variable arguments). The function can take any numbers of arguments.\nPrimary uses:\n\nyour function takes a function as an argument, and we want to pass additional arguments\nS3 generic, need to allow methods to take extra arguments\n\nDownsides:\n\nneed to explain where the arguments go to\nmisspelled argument will not raise an error\n\n\n\nThe ... can be something like na.rm = F.\nGiven that the first argument is being averaged upon, if a vector is not specified correctly, only the first element is being averaged; and the other elements are treated as additional arguments that are not necessarily used.\n\n# mean(c(1,2,3)) \nmean(1, 2, 3)\n\n[1] 1\n\nmean(c(1, 2), 3)\n\n[1] 1.5\n\n\n\nfplus &lt;- function(a, ...){\n  list(sum(a), ...)\n}\nfplus(a = c(1,2,3))\n\n[[1]]\n[1] 6\n\nfplus(a = c(1,2,3), 4)\n\n[[1]]\n[1] 6\n\n[[2]]\n[1] 4\n\n\n\nf1 &lt;- function(a, ...){\n  args &lt;- list(...)\n  if('y' %in% names(args)){\n    args$y &lt;- 0.5 + args$y\n    do.call(f2, args) # second arg need to be a list\n  }else{\n    a+1\n  }\n\n}\nf2 &lt;- function(y){return(y)}"
  }
]
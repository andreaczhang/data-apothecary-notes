---
title: "Functions"
description: |
  Notes on functions
author: "Chi Zhang"
date: "2023-10-06"
categories: [RSE, Rpkg]
sidebar: false
code-block-bg: false
code-block-border-left: true
format: 
  html:
    toc: true
    toc-depth: 2
    code-fold: false
    code-tools: false
---


## dot-dot-dot

Special argument `...`. This type of argument is *varargs* (variable arguments). The function can take any numbers of arguments.


Primary uses:

* your function takes a function as an argument, and we want to pass additional arguments
* S3 generic, need to allow methods to take extra arguments

Downsides:

* need to explain where the arguments go to
* misspelled argument will not raise an error

#### Example with `mean(x, ...)`

The `...` can be something like `na.rm = F`. 

Given that the first argument is being averaged upon, if a vector is not specified correctly, only the first element is being averaged; and the other elements are treated as additional arguments that are not necessarily used.

```{r}
#| label: dotdotdot1
#| echo: true
#| eval: true

# mean(c(1,2,3)) 
mean(1, 2, 3)
mean(c(1, 2), 3)
```


```{r}
#| label: dotdotdot2
#| echo: true
#| eval: true

fplus <- function(a, ...){
  list(sum(a), ...)
}
fplus(a = c(1,2,3))
fplus(a = c(1,2,3), 4)
```



```{r}
#| label: dotdotdot3
#| echo: true
#| eval: false

f1 <- function(a, ...){
  args <- list(...)
  if('y' %in% names(args)){
    args$y <- 0.5 + args$y
    do.call(f2, args) # second arg need to be a list
  }else{
    a+1
  }

}
f2 <- function(y){return(y)}
```


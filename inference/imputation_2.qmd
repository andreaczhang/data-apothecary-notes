---
title: "Multiple imputation in R"
description: |
  `MICE`, regression, PMM
author: "Chi Zhang"
date: "2024-02-23"
categories: [Missing data]
sidebar: false
code-block-bg: true
code-block-border-left: true
format: 
  html:
    toc: true
    toc-depth: 3
    code-fold: false
    code-tools: false
---

Here I use the small dataset `nhanes` included in `mice` package. It has 25 rows, and three out of four variables have missings. 

The original NHANES data is a large national level survey, some are publicly available via R package `nhanes`.

```{r}
#| label: data
#| echo: true
#| eval: true

library(mice)

# load example dataset from mice
head(nhanes)
summary(nhanes)
```

Examine missing pattern with `md.pattern(data)`.

```{r}
#| label: missing-pattern
#| echo: true
#| eval: true

# 27 missing in total
# by col: 8 for hyp, 9 for bmi, 10 for chl
# by row: n missing numbers

md.pattern(nhanes)
```


## Imputation without model

### Impute with mean

```{r}
#| label: impute-mean
#| echo: true
#| eval: true

# only run once, since it's just the mean
imp <- mice(data = nhanes, 
            method = 'mean', 
            m = 1, 
            maxit = 1)

imp # this is not the imputed value

# check imputed values for bmi: same as mean(nhanes$bmi, na.rm=T)
imp$imp$bmi

# impute the dataset
nhanes_imp <- complete(imp)
nhanes_imp
```


### Impute by sampling 

```{r}
#| label: impute-sample
#| echo: true
#| eval: true

imps <- mice(data = nhanes, 
            method = 'sample', 
            m = 1, 
            maxit = 1)
imps$imp$bmi
```


## Imputation with regression

Regression methods (continuous, normal outcome) are implemented in `mice` with methods starting with `norm`.


* Linear regression without parameter uncertainty, [mice.impute.norm.nob](https://amices.org/mice/reference/mice.impute.norm.nob.html)
* Linear regression through prediction, [mice.impute.norm.predict](https://amices.org/mice/reference/mice.impute.norm.predict.html)
* Bayesian linear regression, [mice.impute.norm](https://amices.org/mice/reference/mice.impute.norm.html)
* Linear regression bootstrap, [mice.impute.norm.boot](https://amices.org/mice/reference/mice.impute.norm.boot.html)



### Example: Regression without parameter uncertainty

We can generate two imputed datasets by setting `m=2`. 

There is a certain level of randomness, so would be a good idea to set seed.

```{r}
#| label: impute-reg-1
#| echo: true
#| eval: true

set.seed(1)
impr0 <- mice(nhanes, method = 'norm.nob', m=2, maxit = 1)
impr0

nhanes_impr0 <- complete(impr0) # by default, returns the first imputation
nhanes_impr0
```
When we have two imputed datasets, we can check the values for each of the variables. For example, extract `bmi` variable from the imputed data `imp`,

```{r}
#| label: impute-reg-2
#| echo: true
#| eval: true

# two imputed datasets (m=2)
impr0$imp$bmi
```

We can also specify which imputed dataset to use as our complete data. Set index to 0 (`action = 0`) returns the original dataset with missing values.

Here we check which of the imputed data is being used as the completed dataset. First take a note of the row IDs (based on `bmi`, for example). Then we generate completed dataset. 

* if no `action` argument is set, then it returns the first imputation by default
* `action=0` corresponds to the original data with missing values

```{r}
#| label: impute-reg-3
#| echo: true
#| eval: true

# check which imputed data is used for the final result, take note of row id
id_missing <- which(is.na(nhanes$bmi))
id_missing

nhanes_impr0_action0 <- complete(impr0, action = 0) 
nhanes_impr0_action0[id_missing, ] # original data with missing bmi

nhanes_impr0_action1 <- complete(impr0, action = 1) 
nhanes_impr0_action1[id_missing, ] # using first imputation

nhanes_impr0_action2 <- complete(impr0, action = 2) 
nhanes_impr0_action2[id_missing, ] # using second imputation
```


### Other imputation by linear regression

Other various of imputaton via linear regression can be implemented simply by changing the method argument.

* Linear regression through prediction, [mice.impute.norm.predict](https://amices.org/mice/reference/mice.impute.norm.predict.html)
* Bayesian linear regression, [mice.impute.norm](https://amices.org/mice/reference/mice.impute.norm.html)
* Linear regression bootstrap, [mice.impute.norm.boot](https://amices.org/mice/reference/mice.impute.norm.boot.html)


```{r}
#| label: impute-reg-pred
#| echo: true
#| eval: true
impr <- mice(nhanes, method = 'norm.predict', m=1, maxit=1)
impr$imp$bmi
```

Bayesian linear regression

```{r}
#| label: impute-reg-bayes
#| echo: true
#| eval: true
impb <- mice(nhanes, method = 'norm', m=1, maxit=1)
impb$imp$bmi
# nhanes_impb <- complete(impb)
```

Bootstrap

```{r}
#| label: impute-reg-bt
#| echo: true
#| eval: true

impbt <- mice(nhanes, method = 'norm.boot', m=1, maxit=1)
impbt$imp$bmi
```


## Predictive Mean Matching PMM

The idea behind PMM is as follow.

* with complete data, estimate a linear regression of Y (some missing) on Z (no missing), results in coefficients $\beta$. 
* draw $\beta^*$ from the posterior predictive distribution of $\beta$ (multivariate normal with mean b and covariance matrix of b).
* generate predicted values for $Y_{hat}$ (complete cases) and $Y_{star}$ (missing)
* for each $Y_{star}$, identify a few cases (7,12) whose predicted values $Y_{hat}$ are close to the predicted $Y_{star}$ (10 in the illustration below)
* randomly draw one value from the observed $Y$ from the doner cases (6, 11).

![](figure/mi_pmm.png){width=75% fig-align="center"}

Assumption for PMM: distribution of missing is the same as obsereved data of the candidates that produce the closest values to the predicted value by the missing entry.

PMM is robust to transformation, less vulnerable to model misspecification.

Implementation in `mice`:  

* Predictive mean matching, [mice.impute.pmm](https://amices.org/mice/reference/mice.impute.pmm.html)
* Weighted predictive mean matching, [mice.impute.midastouch](https://amices.org/mice/reference/mice.impute.midastouch.html)
* Multivariate predictive mean matching, [mice.impute.mpmm](https://amices.org/mice/reference/mice.impute.mpmm.html)



```{r}
#| label: impute-pmm
#| echo: true
#| eval: true
imp_pmm <- mice(nhanes, method = 'pmm', m=1, maxit=10)
imp_pmm

# imputations for bmi
imp_pmm$imp$bmi
```


```{r}
#| label: impute-pmms
#| echo: true
#| eval: true

imp_pmms <- mice(nhanes, method = 'midastouch', m=1, maxit=10)
imp_pmm

imp_pmms$imp$bmi
```

